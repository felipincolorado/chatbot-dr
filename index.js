// index.js

// -------------------
//  1. CONFIGURACI√ìN INICIAL
// -------------------

const express = require('express');
const { MessagingResponse } = require('twilio').twiml;
const app = express();
app.use(express.urlencoded({ extended: false }));

// -------------------
//  2. TEXTOS Y RESPUESTAS DEL BOT
// -------------------

const responses = {
  // Men√∫ actualizado con la nueva opci√≥n de redirecci√≥n.
  menu: '¬øC√≥mo puedo ayudarte hoy? üòä\n\n1Ô∏è‚É£ Valor de la consulta\n2Ô∏è‚É£ Agendar una hora\n3Ô∏è‚É£ Medios de pago\n4Ô∏è‚É£ Informaci√≥n del M√©dico\n5Ô∏è‚É£ T√©rminos y condiciones\n6Ô∏è‚É£ Consulta Personalizada',

  opcion1: '¬°Claro! Le comento. El doctor Sebasti√°n es m√©dico general. La atenci√≥n es Teleconsulta y se realiza por Google Meet. El valor Fonasa es de 30 mil e Isapre 40 mil pesos. Como m√©dico general, en caso de que el paciente requiera reposo, solo puede otorgar 14 d√≠as como m√°ximo por consulta y en el caso de receta o receta cheque (extensi√≥n m√°xima de 3 meses por consulta), √©sta llega de forma digital al correo del paciente durante la atenci√≥n.',
  opcion2: '¬°Perfecto! Puedes agendar directamente en este enlace. ¬°Ser√° un gusto atenderte!\n\nüìÖ https://www.drsebastianaravena.cl',
  opcion3: 'Aceptamos pagos con tarjetas de d√©bito y cr√©dito luego de agendar tu hora. üí≥\n\n*Importante*: Al realizar el pago, usted acepta nuestros t√©rminos y condiciones (consulte la opci√≥n 5).',
  opcion4: 'El Dr. Aravena es m√©dico general, egresado de la Universidad de Concepci√≥n. Puedes verificar su registro profesional (N¬∫ 763509) aqu√≠: https://rnpi.superdesalud.gob.cl/',
  terminos: 'üìÑ *T√©rminos y Condiciones*\n\nLe informamos sobre nuestras pol√≠ticas de cancelaci√≥n y reembolso:\n\n‚Ä¢ Si anula su hora con m√°s de 24 horas de anticipaci√≥n, se le devolver√° el 90% del valor pagado.\n‚Ä¢ Si anula con menos de 24 horas de anticipaci√≥n, se le devolver√° el 50% del dinero.\n\nAl agendar y pagar su consulta, usted confirma que ha le√≠do y aceptado estos t√©rminos.',
  
  // NUEVA RESPUESTA para la opci√≥n 6.
  // ¬°¬°RECUERDA CAMBIAR EL N√öMERO DE TEL√âFONO AQU√ç!!
  opcion6: '¬°Entendido! Para consultas personalizadas, problemas con licencias o cualquier otro tema que requiera atenci√≥n humana, puedes hablar directamente con un asistente haciendo clic en este enlace:\n\nüëâ https://wa.me/56926125661\n\nTe responder√°n a la brevedad posible.',

  instrucciones: 'Recuerda escribir solo el n√∫mero de la opci√≥n que deseas.',
  gracias: '¬°De nada! Estoy para ayudarte. Si necesitas algo m√°s, no dudes en escribir "men√∫".'
};

responses.bienvenida = `¬°Hola! Soy Myriam üë©üèª, la asistente virtual del Dr. Aravena. ${responses.menu}\n\n${responses.instrucciones}`;
responses.error = `Disculpa, no entend√≠ muy bien tu mensaje. ${responses.menu}\n\n${responses.instrucciones}`;


// -------------------
//  3. L√ìGICA DEL WEBHOOK
// -------------------
// La l√≥gica ahora es mucho m√°s simple sin el modo "recado".

app.post('/webhook', (req, res) => {
  const twiml = new MessagingResponse();
  const incomingMsg = (req.body.Body || '').toLowerCase().trim();
  let messageToSend;

  switch (incomingMsg) {
    case '1': messageToSend = responses.opcion1; break;
    case '2': messageToSend = responses.opcion2; break;
    case '3': messageToSend = responses.opcion3; break;
    case '4': messageToSend = responses.opcion4; break;
    case '5': messageToSend = responses.terminos; break;
    
    // El caso '6' ahora env√≠a el enlace al otro WhatsApp.
    case '6': messageToSend = responses.opcion6; break;
      
    case 'hola':
    case 'buenos d√≠as':
    case 'men√∫':
      messageToSend = responses.bienvenida;
      break;
    
    case 'gracias':
    case 'muchas gracias':
      messageToSend = responses.gracias;
      break;

    default:
      messageToSend = responses.error;
      break;
  }

  twiml.message(messageToSend);
  res.set('Content-Type', 'text/xml');
  res.status(200).send(twiml.toString());
});


// -------------------
//  4. INICIAR EL SERVIDOR
// -------------------

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`El bot de Myriam est√° funcionando en el puerto ${PORT}`);
});